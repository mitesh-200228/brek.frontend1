{"version":3,"sources":["images/logo_vector.png","components/firebase.js","components/Footer.jsx","components/Home.jsx","components/Another.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","currUser","provider","GoogleAuthProvider","googleSignIn","signInWithPopup","then","result","credentialFromResult","console","log","user","displayName","catch","error","code","message","email","credentialFromError","SocialButton","children","label","href","button","bg","useColorModeValue","rounded","w","h","cursor","as","display","alignItems","justifyContent","transition","_hover","LargeWithNewsletter","React","useState","width","height","color","spacing","fontSize","paddingLeft","direction","Home","data","signInBtnTxt","setSignInBtnTxt","useEffect","dataOfUser","name","value","a","fetch","method","headers","credentials","res","json","gota","FullName","status","Error","setEmail","password","setPassword","history","useHistory","loginUser","e","preventDefault","body","JSON","stringify","y","window","alert","push","phone","confirmPassword","setUser","handleInput","target","PostData","PhoneNumber","Email","CurrentLocation","TravelDestination","Date","travel","setTravel","seter","PostTravelData","y1","initialRef","useRef","finalRef","useDisclosure","isOpen","onOpen","onClose","initialRef1","finalRef1","isOpen1","onOpen1","onClose1","show","setShow","show1","setShow1","paddingTop","src","logo","className","alt","flexWrap","marginRight","border","borderRadius","paddingRight","fontWeight","onClick","initialFocusRef","finalFocusRef","isCentered","m","variant","_selected","pb","onChange","type","ref","placeholder","mt","colorScheme","leftIcon","mr","opacity","size","pr","textAlign","letterSpacing","paddingBottom","marginTop","Another","callAboutPage","Accept","App","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.272c132c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_vector.02eb8c3d.png\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n//For Google signin/up\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n//Configration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCXovlRgTBmG9TG4yM3c_xfZQwYfNEvJ7A\",\r\n  authDomain: \"brek-8f65b.firebaseapp.com\",\r\n  projectId: \"brek-8f65b\",\r\n  storageBucket: \"brek-8f65b.appspot.com\",\r\n  messagingSenderId: \"39490280697\",\r\n  appId: \"1:39490280697:web:86ee955fb86f7c7f7c1628\",\r\n  measurementId: \"G-G8JX4ZDD3V\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nconst auth = getAuth();\r\nvar currUser=null;\r\n// Google Sign In/Up Provider\r\nconst provider = new GoogleAuthProvider();\r\n\r\nfunction googleSignIn() {\r\n  signInWithPopup(auth, provider)\r\n  .then((result) => {\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n\r\n    // The signed-in user info.\r\n   \r\n    // Todo: USE USER OBJECT TO ACESS DATA\r\n    console.log(result);\r\n    console.log(result.user.displayName);\r\n    currUser = result.user.displayName;\r\n    console.log((typeof(result.user)));\r\n\r\n  }).catch((error) => {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = GoogleAuthProvider.credentialFromError(error);\r\n    console.log(error.message);\r\n  });\r\n}\r\n\r\n// TODO: facebook sign in \r\n\r\nexport {googleSignIn, currUser};\r\n","import {\r\n    Box,\r\n    chakra,\r\n    Container,\r\n    Link,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text,\r\n    VisuallyHidden,\r\n    Flex,\r\n    Input,\r\n    Spacer,\r\n    IconButton,\r\n    useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport React, { ReactNode } from 'react';\r\nimport { FaInstagram, FaLinkedin, FaTwitter, FaYoutube } from 'react-icons/fa';\r\nimport { BiMailSend } from 'react-icons/bi';\r\nimport logo from '../images/logo_vector.png';\r\nimport { sendSignInLinkToEmail } from '@firebase/auth';\r\n\r\nconst Logo = (props: any) => {\r\n    return (\r\n        <img src={logo} alt=\"\" />\r\n    );\r\n};\r\nconst SocialButton = ({\r\n    children,\r\n    label,\r\n    href,\r\n}: {\r\n    children: ReactNode;\r\n    label: string;\r\n    href: string;\r\n}) => {\r\n    return (\r\n        <chakra.button\r\n            bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\r\n            rounded={'full'}\r\n            w={8}\r\n            h={8}\r\n            cursor={'pointer'}\r\n            as={'a'}\r\n            href={href}\r\n            display={'inline-flex'}\r\n            alignItems={'center'}\r\n            justifyContent={'center'}\r\n            transition={'background 0.3s ease'}\r\n            _hover={{\r\n                bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\r\n            }}>\r\n            <VisuallyHidden>{label}</VisuallyHidden>\r\n            {children}\r\n        </chakra.button>\r\n    );\r\n};\r\n\r\nconst ListHeader = ({ children }: { children: ReactNode }) => {\r\n    return (\r\n        <Text fontWeight={'500'} fontSize={'lg'} mb={2}>\r\n            {children}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default function LargeWithNewsletter() {\r\n    const [emails, setEmail] = React.useState({\r\n        email: \"\"\r\n    });\r\n    const handler = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const trigger = async (e) => {\r\n        const { email } = emails;\r\n        e.preventDefault();\r\n        const res = await fetch('/emailonly', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });\r\n        const res2 = res.json();\r\n        if (res.status !== 200) {\r\n            return;\r\n        }\r\n        console.log(res2);\r\n    }\r\n    return (\r\n        <Flex width=\"100%\" height=\"35vh\" justifyContent=\"center\" bg=\"#3A4A4E\" color=\"#fff\">\r\n            <Stack spacing={6}>\r\n                <Box>\r\n                    {/* <Logo color={useColorModeValue('gray.700', 'white')} /> */}\r\n                </Box>\r\n                <Text fontSize={'sm'}>\r\n                    © 2021 brek.club  . All rights reserved\r\n                </Text>\r\n                <Flex justifyContent=\"center\" paddingLeft=\"10%\" direction={'row'} spacing={6}>\r\n                    <SocialButton label={'YouTube'} href={'https://www.linkedin.com/company/75043346/admin/'}>\r\n                        <FaLinkedin />\r\n                    </SocialButton>\r\n                    <Spacer/>\r\n                    <SocialButton label={'YouTube'} href={'https://www.linkedin.com/company/75043346/admin/'}>\r\n                        <FaTwitter />\r\n                    </SocialButton>\r\n                    <Spacer/>\r\n\r\n                    <SocialButton label={'Instagram'} href={'https://www.instagram.com/brek.club/'}>\r\n                        <FaInstagram />\r\n                    </SocialButton>\r\n                </Flex>\r\n                <Flex justifyContent=\"center\">\r\n                    <Text color=\"#fff\">Mail us : <a href = \"mailto:reach@brek.club\">reach@brek.club</a></Text>\r\n                </Flex>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}","import React from 'react'\r\nimport DatePicker from 'react-date-picker'\r\nimport { ChakraProvider, HStack, Box, Flex, Spacer, Image, Button, VStack, Text, FormControl, FormLabel, Input, InputGroup, InputRightElement, InputLeftAddon } from '@chakra-ui/react';\r\nimport logo from '../images/logo_vector.png';\r\nimport '../styles/home.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure } from \"@chakra-ui/react\"\r\nimport { Tabs, TabList, Tab, TabPanel, TabPanels } from \"@chakra-ui/react\"\r\nimport { FcGoogle } from 'react-icons/fc';\r\n//Google Sign in/up\r\nimport { googleSignIn, currUser } from './firebase'\r\nimport LargeWithNewsletter from './Footer.jsx';\r\nimport axios from 'axios';\r\nconst Home = () => {\r\n\r\n  const [signInBtnTxt, setSignInBtnTxt] = React.useState(\"\");\r\n  console.log(currUser)\r\n  console.log(signInBtnTxt);\r\n  React.useEffect(() => {\r\n    dataOfUser();\r\n    // setSignInBtnTxt(currUser);\r\n  }, []);\r\n  let data;\r\n  const dataOfUser = async () => {\r\n    try {\r\n      const res = await fetch(\"/userdata\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      data = await res.json();\r\n      // console.log(data.gota.FullName);\r\n      setSignInBtnTxt(data.gota.FullName);\r\n\r\n      if (res.status !== 200) {\r\n        const error = new Error(res.error);\r\n        console.log(error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    };\r\n\r\n  }\r\n\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n  //--------------------------------------------------------------Signin System connection\r\n\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const history = useHistory();\r\n  const loginUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await fetch(\"/signin\", {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n\r\n    const y = res;\r\n    console.log(y);\r\n    \r\n    if (y.status === 400 || !y) {\r\n      window.alert(\"Invalid Credentials\");\r\n    } else {\r\n      window.alert(\"Login Successful\");\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n  //--------------------------------------------------------------Signup System connection\r\n\r\n  const [user, setUser] = React.useState({\r\n    FullName: \"\", email: \"\", phone: \"\", password: \"\", confirmPassword: \"\"\r\n  });\r\n  let name, value;\r\n\r\n  const handleInput = (e) => {\r\n    console.log(e);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setUser({ ...user, [name]: value });\r\n  }\r\n\r\n  const PostData = async (e) => {\r\n    e.preventDefault();\r\n    const { FullName, email, phone, password, confirmPassword } = user;\r\n\r\n    const res = await fetch(\"/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        FullName, email, phone, password, confirmPassword\r\n      })\r\n    });\r\n\r\n    const y = await res.json();\r\n    console.log(y);\r\n    if (y.status === 422 || !y) {\r\n      window.alert(\"Invalid Registration\");\r\n      console.log(\"Invalid Registration\");\r\n    } else {\r\n      window.alert(\"Registration Successful\");\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n  //----------------------------------------------------------------Travel Form Submission\r\n\r\n  const [travel, setTravel] = React.useState({\r\n    FullName: \"\", PhoneNumber: \"\", Email: \"\", CurrentLocation: \"\", TravelDestination: \"\", Date: \"\"\r\n  });\r\n\r\n  const seter = (e) => {\r\n    value = e.target.value;\r\n    name = e.target.name;\r\n    setTravel({ ...travel, [name]: value });\r\n  }\r\n\r\n  const PostTravelData = async (e) => {\r\n    e.preventDefault();\r\n    const { FullName, PhoneNumber, Email, CurrentLocation, TravelDestination } = travel;\r\n\r\n    const res = await fetch('/userTravelData', {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        FullName, PhoneNumber, Email, CurrentLocation, TravelDestination\r\n      })\r\n    });\r\n\r\n    const y1 = await res.json();\r\n    console.log(y1);\r\n    if (y1.status === 422 || !y1) {\r\n      window.alert(\"Invalid Registration\");\r\n      console.log(\"Invalid Registration\");\r\n    } else {\r\n      window.alert(\"Registration Successful\");\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  //----------------------------------------------------------------Getting User Data\r\n\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n  //----------------------------------------------------------------Chakra designing stuff\r\n\r\n\r\n  const initialRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  const initialRef1 = React.useRef();\r\n  const finalRef1 = React.useRef();\r\n  const { isOpen: isOpen1, onOpen: onOpen1, onClose: onClose1 } = useDisclosure()\r\n\r\n  const [show, setShow] = React.useState(false)\r\n  const handleClickSignup = () => setShow(!show)\r\n\r\n  const [show1, setShow1] = React.useState(false)\r\n  const handleClickSignup1 = () => setShow1(!show1)\r\n\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n  //-----------------------------------------------------------------CHAKRA UI\r\n\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Box bg=\"#E3EFEE\" width=\"100%\" height=\"200vh\">\r\n        <Box width=\"100%\" height=\"100vh\" paddingTop=\"40px\">\r\n          <HStack>\r\n            <Image src={logo} className=\"logo\" alt=\"\"></Image>\r\n            <Spacer />\r\n            <Flex flexWrap=\"wrap\" marginRight=\"20px\">\r\n              <Button className=\"btn1\" color=\"#5A4012\" border=\"none\" borderRadius=\"50px\" fontSize=\"17px\" bg=\"transparent\" height=\"50px\" width=\"150px\">Contact Us</Button>\r\n              {signInBtnTxt || currUser ? <Text paddingTop=\"13px\" paddingRight=\"20px\" color=\"#5a4012\" fontWeight=\"650\">{signInBtnTxt ? signInBtnTxt : currUser}</Text> : <Button className=\"btn1\" color=\"#5A4012\" border=\"none\" borderRadius=\"50px\" fontSize=\"17px\" bg=\"transparent\" height=\"50px\" width=\"150px\" onClick={onOpen}>Sign In</Button>}\r\n              <Modal\r\n                initialFocusRef={initialRef}\r\n                finalFocusRef={finalRef}\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n                isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent >\r\n                  <Box m={4}>\r\n                    <Tabs variant=\"soft-rounded\">\r\n                      <ModalHeader><TabList ><Tab _selected={{ color: \"white\", bg: \"blue.500\" }}>Sign In</Tab><Tab _selected={{ color: \"white\", bg: \"green.400\" }}>Sign Up</Tab></TabList></ModalHeader>\r\n\r\n                      {/*Both Signup and Sign in inside one window*/}\r\n                      <TabPanels>\r\n                        <TabPanel>\r\n                          <ModalBody pb={6}>\r\n                            <FormControl>\r\n                              <FormLabel >E-Mail</FormLabel>\r\n                              <Input onChange={(e) => { setEmail(e.target.value) }} value={email} type=\"email\" ref={initialRef} placeholder=\"E-Mail\" />\r\n                              <FormLabel mt={4}>Password</FormLabel>\r\n                              <Input value={password} onChange={(e) => { setPassword(e.target.value) }} type=\"password\" placeholder=\"Password\" />\r\n                            </FormControl>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <HStack>\r\n                              <Button onClick={googleSignIn} colorScheme=\"cyan\" leftIcon={<FcGoogle fontSize='20px' />}>Google</Button>\r\n                              <Button type=\"submit\" onClick={loginUser} colorScheme=\"blue\" mr={3}>\r\n                                Sign In\r\n                              </Button>\r\n                              <Button onClick={onClose}>Cancel</Button>\r\n                            </HStack>\r\n                          </ModalFooter>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel>\r\n                          <ModalBody pb={6}>\r\n                            <FormControl>\r\n                              <FormLabel mt={4}>Full name</FormLabel>\r\n                              <Input name=\"FullName\" type=\"text\" onChange={handleInput} value={user.FullName} placeholder=\"Your Name\" />\r\n                              <FormLabel mt={4}>Phone Number</FormLabel>\r\n                              <InputGroup>\r\n                                <InputLeftAddon children=\"+91\" opacity='0.7' />\r\n                                <Input name=\"phone\" onChange={handleInput} value={user.phone} type=\"number\" placeholder=\"Phone Number\" />\r\n                              </InputGroup>\r\n                              <FormLabel mt={4}>E-Mail</FormLabel>\r\n                              <Input name=\"email\" type=\"email\" onChange={handleInput} value={user.email} ref={initialRef} placeholder=\"E-Mail\" />\r\n                              <FormLabel mt={4}>Password</FormLabel>\r\n                              <InputGroup size=\"md\">\r\n                                <Input pr=\"4.5rem\" type={show ? \"text\" : \"password\"} name=\"password\" onChange={handleInput} value={user.password} placeholder=\"Enter password\" />\r\n                                <InputRightElement width=\"4.5rem\">\r\n                                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClickSignup}> {show ? \"Hide\" : \"Show\"}</Button>\r\n                                </InputRightElement>\r\n                              </InputGroup>\r\n                              <FormLabel mt={4}>Confirm Password</FormLabel>\r\n                              <InputGroup size=\"md\">\r\n                                <Input pr=\"4.5rem\" type={show1 ? \"text\" : \"password\"} placeholder=\"Confirm password\" name=\"confirmPassword\" onChange={handleInput} value={user.confirmPassword} />\r\n                                <InputRightElement width=\"4.5rem\">\r\n                                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClickSignup1}> {show1 ? \"Hide\" : \"Show\"}</Button>\r\n                                </InputRightElement>\r\n                              </InputGroup>\r\n                            </FormControl>\r\n                          </ModalBody>\r\n\r\n                          <ModalFooter>\r\n                            <HStack>\r\n                              <Button onClick={googleSignIn} colorScheme=\"teal\" leftIcon={<FcGoogle fontSize='20px' />}>Google</Button>\r\n                              <Button onClick={PostData} type=\"submit\" colorScheme=\"green\" mr={3}>Sign Up</Button>\r\n                              <Button onClick={onClose}>Cancel</Button>\r\n                            </HStack>\r\n                          </ModalFooter>\r\n                        </TabPanel>\r\n                      </TabPanels>\r\n                    </Tabs>\r\n                    {/*Both signup signin ends */}\r\n                  </Box>\r\n                  <ModalCloseButton />\r\n                </ModalContent>\r\n              </Modal>\r\n              <Image />\r\n            </Flex>\r\n          </HStack>\r\n\r\n          <Box className=\"sand\" width=\"100%\" height=\"73vh\">\r\n            <VStack>\r\n              <Box textAlign=\"center\" className=\"mainText\">\r\n                <Text className=\"text1\">we make free, custom</Text>\r\n                <Text className=\"text1\">itineraries for you</Text>\r\n                <Text fontSize=\"15px\" letterSpacing=\"3px\" color=\"#5A4012\" fontWeight=\"700\" paddingBottom=\"20px\"> <h2 className=\"text2\">transparent. flexible. yours.</h2></Text>\r\n              </Box>\r\n\r\n              {/* <Button onClick={getUserData}>sxs</Button> */}\r\n              {/**Travel Now form here */}\r\n              <Button\r\n                marginTop=\"2px\"\r\n                onClick={onOpen1}\r\n                className=\"btn2\"\r\n                color=\"#5A4012\"\r\n                border=\"none\"\r\n                borderRadius=\"50px\"\r\n                fontSize=\"17px\"\r\n                bg=\"#C6EAE7\"\r\n                height=\"50px\"\r\n                width=\"170px\">Travel Now</Button>\r\n              <Modal\r\n                initialFocusRef={initialRef1}\r\n                finalFocusRef={finalRef1}\r\n                isOpen={isOpen1}\r\n                onClose={onClose1}\r\n                isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                  <ModalHeader>Travel Now</ModalHeader>\r\n                  <ModalCloseButton />\r\n                  <ModalBody pb={6}>\r\n                    <FormControl>\r\n                      <FormLabel mt={4}>Full name</FormLabel>\r\n                      <Input name=\"FullName\" type=\"text\" onChange={seter} value={travel.FullName} placeholder=\"Your Name\" />\r\n                      <FormLabel mt={4}>Phone Number</FormLabel>\r\n                      <InputGroup>\r\n                        <InputLeftAddon children=\"+91\" opacity='0.7' />\r\n                        <Input name=\"PhoneNumber\" type=\"number\" onChange={seter} placeholder=\"Phone Number\" value={travel.PhoneNumber} />\r\n                      </InputGroup>\r\n                      <FormLabel mt={4}>E-Mail</FormLabel>\r\n                      <Input name=\"Email\" type=\"text\" onChange={seter} placeholder=\"E-Mail\" value={travel.Email} />\r\n                      <FormLabel mt={4}>Current Location</FormLabel>\r\n                      <Input name=\"CurrentLocation\" type=\"text\" onChange={seter} value={travel.CurrentLocation} placeholder=\"Your City\" />\r\n                      <FormLabel mt={4}>Travel Destinantion</FormLabel>\r\n                      <Input name=\"TravelDestination\" type=\"text\" onChange={seter} value={travel.TravelDestination} ref={initialRef} placeholder=\"Travel To...\" />\r\n                      <HStack>\r\n                        <FormLabel mt={4}>Travel Start</FormLabel>\r\n                        <DatePicker color=\"#000\" />\r\n                        <FormLabel mt={4}>Travel End</FormLabel>\r\n                        <DatePicker color=\"#000\" />\r\n                      </HStack>\r\n                    </FormControl>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button onClick={PostTravelData} type=\"submit\" colorScheme=\"blue\" mr={3}>Confirm Travel</Button>\r\n                    <Button onClick={onClose1}>Cancel</Button>\r\n                  </ModalFooter>\r\n                </ModalContent>\r\n              </Modal>\r\n              {/**Travel Now form ends */}\r\n\r\n\r\n            </VStack>\r\n          </Box>\r\n\r\n          <Box height=\"100px\" color='white' />\r\n          {/* Page-2 */}\r\n\r\n          <Box className=\"secondSlide\" width=\"100%\" height=\"120vh\">\r\n            <Box justifyContent=\"center\" paddingTop=\"50px\" width=\"100%\">\r\n              <VStack>\r\n                <Flex justifyContent=\"flex-end\" width=\"100%\" paddingRight=\"17%\">\r\n                  <Box width=\"300px\" height=\"100px\" className=\"cloud\" borderRadius=\"80%\">\r\n                    <Text textAlign=\"center\" color=\"#15233E\" paddingLeft=\"20px\" paddingRight=\"20px\" width=\"100%\" paddingTop=\"20px\" fontWeight=\"650\" letterSpacing=\"1px\" className=\"slide2txt\">this place is nothing like what's shown on the web </Text>\r\n                  </Box>\r\n                </Flex>\r\n                <Spacer />\r\n\r\n                <Flex justifyContent=\"flex-start\" width=\"100%\" paddingLeft=\"17%\">\r\n                  <Box width=\"300px\" height=\"120px\" className=\"cloud\" borderRadius=\"80%\">\r\n                    <Text textAlign=\"center\" color=\"#15233E\" paddingLeft=\"20px\" paddingRight=\"20px\" width=\"100%\" paddingTop=\"20px\" fontWeight=\"650\" letterSpacing=\"1px\" className=\"slide2txt\">bro, that guy charged us extra just because we are tourist</Text>\r\n                  </Box>\r\n                </Flex>\r\n                <Spacer />\r\n\r\n                <Flex justifyContent=\"flex-end\" width=\"100%\" paddingRight=\"17%\" className=\"thirdBox\">\r\n                  <Box width=\"300px\" height=\"100px\" className=\"cloud\" borderRadius=\"80%\">\r\n                    <Text textAlign=\"center\" color=\"#15233E\" paddingLeft=\"20px\" paddingRight=\"20px\" width=\"100%\" paddingTop=\"20px\" fontWeight=\"650\" letterSpacing=\"1px\" className=\"slide2txt\">yaar if we knew this place before hand we could have enjoyed more! </Text>\r\n                  </Box>\r\n                </Flex>\r\n              </VStack>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Page-3 */}\r\n\r\n          <Box width=\"100%\" className=\"mountain\" height=\"120vh\">\r\n            <Box width=\"100%\">\r\n              <Flex flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\" textAlign=\"center\" paddingTop=\"80px\">\r\n                <Text color=\"#15233E\" className=\"slide44\" fontWeight=\"650\">we take your brek</Text>\r\n              </Flex>\r\n              <Flex flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\" textAlign=\"center\">\r\n                <Text color=\"#15233E\" className=\"slide44\" fontWeight=\"650\" mt=\"-5px\">seriously.</Text>\r\n              </Flex>\r\n              <Flex flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\" textAlign=\"center\">\r\n                <Text color=\"#15233E\" fontWeight=\"650\" width=\"42vw\" className=\"lasttext\">we at brek.club understand how hectic and tiresome planning an entire trip can be. Therefore we decided to do it for you</Text>\r\n              </Flex>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Page-4 */}\r\n\r\n          <Box className=\"slide4\" width=\"100%\" height=\"130vh\">\r\n            <Flex>\r\n              <Text className=\"pop1\" paddingLeft=\"40px\" paddingTop=\"50px\" color=\"#15233E\" width=\"100%\" fontWeight=\"750\">a team that <br />cares</Text>\r\n            </Flex>\r\n            <Flex>\r\n              <Text className=\"pop2\" paddingLeft=\"40px\" paddingTop=\"50px\" color=\"#15233E\" fontWeight=\"750\">we are a group of students presently pursuing our engineering from IIT Madras, who love travelling. We understand that everyone right now is mentally exhausted and this is our small way to spread joy and give you a brek you really deserve</Text>\r\n            </Flex>\r\n          </Box>\r\n\r\n\r\n          {/* Footer */}\r\n          <LargeWithNewsletter />\r\n\r\n        </Box>\r\n      </Box>\r\n    </ChakraProvider>\r\n  )\r\n}\r\nexport default Home;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Another = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const callAboutPage = async () => {\r\n        try {\r\n            const res = await fetch('/another',{\r\n                method:'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials:\"include\"\r\n            });\r\n            console.log(\"214124\");\r\n            const data = await res.json();\r\n            console.log(\"12\");\r\n            console.log(data);\r\n\r\n            if(!res.status === 200) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n        }catch(err) {\r\n            console.log(err);\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        callAboutPage();\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <form method=\"GET\">\r\n                this is another page\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Another\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Home from './components/Home';\r\nimport Another from './components/Another';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route to=\"/\" exact>\r\n          <Home/>\r\n        </Route>\r\n        <Route to=\"/another\" exact>\r\n          <Another/>\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It is the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ColorModeScript } from '@chakra-ui/react';\r\nimport React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ColorModeScript />\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}